package org.fadhilacademy;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import org.openqa.selenium.Platform;

//**********************************************************************************************************
//Author: Saesar14
//Description: ExtentReports related operations are done by this class. I added extra functionality such as
//"getCurrentPlatform". In this way, framework can create a report folder and file based on OS.
//Reference: http://extentreports.com/docs/versions/3/java/
//**********************************************************************************************************
public class ExtentManager {
	public static ExtentReports extent;
	public static Platform platform;
	public static String timeStampDate = new SimpleDateFormat("yyyy.MM.dd-HH.mm.ss").format(new Date());
	public static String reportFileName = "Automation Test Report " + timeStampDate + ".html";
	public static String windowsPath = System.getProperty("user.dir") + "\\reports\\Automation Report " + timeStampDate + "\\" + timeStampDate + ".html";
	public static String winReportFileLoc = windowsPath + File.separator + reportFileName;

	public static ExtentReports getInstance() {
		if (extent == null)
			createInstance();
		return extent;
	}

	// Create an extent report instance
	public static ExtentReports createInstance() {
		platform = getCurrentPlatform();
		String fileName = getReportFileLocation(platform);
		ExtentSparkReporter ExtentSparkReporter = new ExtentSparkReporter(windowsPath);
		ExtentSparkReporter.config().setReportName("Web Automation Result");
		ExtentSparkReporter.config().setDocumentTitle("Test Result");

		extent.setSystemInfo("Name of the OS : ", System.getProperty("os.name"));
		extent.setSystemInfo("Version of the OS : ", System.getProperty("os.version"));
		extent.setSystemInfo("Architecture of the OS : ", System.getProperty("os.arch"));
		extent.setSystemInfo("Action", "<a href='dd'><b>EXPORT TO PDF</b></a>");
		return extent;
	}

	// Select the extent report file location based on platform
	private static String getReportFileLocation(Platform platform) {
		String reportFileLocation = null;
		switch (platform) {
			case WINDOWS:
				reportFileLocation = winReportFileLoc;
				System.out.println("Report Path for WINDOWS: " + windowsPath + "\n");
				break;
			default:
				reportFileLocation = winReportFileLoc;
				System.out.println("Report Path: " + windowsPath + "\n");
				break;
		}
		return reportFileLocation;
	}

	// Get current platform
	private static Platform getCurrentPlatform() {
		if (platform == null) {
			String operSys = System.getProperty("os.name").toLowerCase();
			if (operSys.contains("win")) {
				platform = Platform.WINDOWS;
			} else if (operSys.contains("nix") || operSys.contains("nux") || operSys.contains("aix")) {
				platform = Platform.LINUX;
			} else if (operSys.contains("mac")) {
				platform = Platform.MAC;
			}
		}
		return platform;
	}
}
